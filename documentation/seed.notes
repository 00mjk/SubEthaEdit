-------------------------------------------------------------------------------
SEE-SERVER:


WEBSITE
- one page, header, fliesstext, features, ala apple 
- key features:
  - "works everywhere" aka. keine nat scheisse
  - user verwaltung, gruppen, alle user sehen
  - admin features: neue "netz"-dokumente anlegen, ...
  - files - integration - gedÃ¶hns (Apache Root und co), remote saving
  - supasicha: password und ssl protected files, gruppen zugriff etc.
  - "Time-Machine" / BackInTime ("Restore previous document state")

TAGLINE: Get connected?...

---------------------------------------------------------------------------------
AUTHENTICATION
- provide a simple beep channel for authentication
- adjust PresenceManager and MMSession to be able to cope with different versions of the same Session

PERMISSIONS

Permission Concept has *users* which can be in many *groups* and have one *role*
Three roles are possible *AdminRole*, *ConfidantRole* and *GuestRole*
I think the roles are an extension of a "superuser" flag - e.g. a flag that would allow a user to do administrative stuff.

The thre roles specify how much of the SubEthaEdit Interface the user may use. In the *GuestRole* the user may use the server only as a normal SubEthaEdit - So he does not gain access to the more advanced features. He only can use the files already there.
In the *ConfidantRole* the user gains access to the server document interface. Here he can add, remove, change permissions ond and  rename documents he has permissions to.
In the *AdminRole* the user has access to the server document interface and sees all files on the server. The *AdminRole* is also allowed to change users, groups and user roles.

_seed_ hosts file system directory. each file and subdirectory in that directory does have an access control list specifying who may do what with it.
Here we have to decide the garnularity of the permissions. e.g. does a document appear read only for one group and read/write for others?

Currently in SubEthaEdit we have files that can be:
announced/concealed
locked, read-only,read-write

the locked state doesn't make to much sense in a server variant, neither do concealed documents.
So we should have the rule that every document that is seen in the connection window has to be accessible to the current user.

So each document has a list of users/groups that are allowed to read/write and a list sthat are allowed to read-only. read-write would imply the permission to remotly save in that context.

There also was a notion of an owner of a document. an owner is able to change the documents read-only and read-write lists as well as to transfer ownership. he may also remove the file.


admin powers:
u - create user
p - modify other users permissions
x - delete user

folder permissions
(folder read)
cr - read folder 
(folder write)
cd - create documents
cf - create folder
(folder own)
cx - delete folder
mf - modify folder permissions

document permissions (only customizable on person basis for confidants):
(document read)
r - read document
(document read-write)
m - rename documents
s - remote save document
w - write/modify document (metadata? mode, encoding, line ending, tabsettings)
(document own)
d - delete document
o - modify document permissions


UI

*PrefPane*
- for user administration (change, add, remove, groups, roles)
- general prefs (autosave timer, etc.)

*Client*-*side*
- Connection Window gets outline view treatment: Display folder and documents, everything can be klappt away.
- Rename, Create, Delete in place. Permissions ala Finder's cmd-I, drei tableviews.

SASL-PLAIN EXAMPLE CONVERSATION
> MSG 0 4 . 693 162
> Content-Type: application/beep+xml
> 
> <start number='7'><profile uri='http://iana.org/beep/SASL/PLAIN'><![CDATA[<blob>AGFkbWluAGFkbWlu</blob>]]></profile></start>
> END
< RPY 0 4 . 760 133
< Content-Type: application/beep+xml
< 
< <profile uri='http://iana.org/beep/SASL/PLAIN'><![CDATA[<blob status='complete' />]]></profile>
< END
> MSG 0 5 . 855 69
> Content-Type: application/beep+xml
> 
> <close number='7' code='200' />
> END
< RPY 0 5 . 893 44
< Content-Type: application/beep+xml
< 
< <ok />
< END
> MSG 0 6 . 924 162
> Content-Type: application/beep+xml
> 
> <start number='9'><profile uri='http://iana.org/beep/SASL/PLAIN'><![CDATA[<blob>AGFkbWluAGJheg==</blob>]]></profile></start>
> END
< RPY 0 6 . 937 155
< Content-Type: application/beep+xml
< 
< <profile uri='http://iana.org/beep/SASL/PLAIN'><![CDATA[<error code='535'>authentication failure</error>]]></profile>
< END
> MSG 0 7 . 1086 69
> Content-Type: application/beep+xml
> 
> <close number='9' code='200' />
> END
< RPY 0 7 . 1092 44
< Content-Type: application/beep+xml
< 
< <ok />
< END

The client initiates a channel with a blob containing base64 encoded <authid>0<username>0<password> string. the server answers (depending if the credentials are valid) either with a blob status="complete" or an error. after that the client closes the channel. another authentication try needs to redo this procedure - e.g. start another channel with this profile uri.

since logging out isn't specified anywhere i will use trying to log in with empty credentials as logout. in fact any other authentication try that will fail will log out the current person.

LIGHTHOUSE

we want users that are connected to seed be able to have a connection to each other.

for this first SubEthaEdit should implmenet nat port mapping and announce that
if that doesn't work, then a tunneled connection through seed should be possible

-------------------------------------------------------------------------------
NOTES ON / KEY TO THIS TEMPLATE:
HEADLINES
    ... have to be CAPITALISED and stand alone in a line to be recognized
    This differentiates from the text that follows
A _variable_ that you can change will be surrounded by _underscores_
    Spaces in variables are also replaced with _under_scores_
    This allows people to select the whole _variable_ with a simple double-click
A {tool-tip} is lower case and surrounded by {curly brackets / parentheses}
    These supply helpful contextual information.
References should be added as [1] [2] and so forth.
An *emphasis* can be put on a word by adding *stars* around it


-------------------------------------------------------------------------------
DISCLAIMER:
Copyright shared between all the participants unless otherwise stated...
Generic conference template copyright by Tom Coates, tom@plasticbag.org
Additions and Conference.mode by Dominik Wagner, dom@codingmonkeys.de