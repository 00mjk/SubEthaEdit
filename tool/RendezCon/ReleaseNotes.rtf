{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica;\f1\fswiss\fcharset77 Helvetica-Bold;\f2\fmodern\fcharset77 Courier;
\f3\fmodern\fcharset77 Courier-Bold;\f4\fmodern\fcharset77 Courier-Oblique;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue255;\red50\green94\blue174;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\qr

\f0\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b\fs48 \cf0 RendezCon v0.1
\f0\b0\fs24 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b \cf0 by Dominik Wagner (dom@codingmonkeys.de)\
TheCodingMonkeys\
http://www.codingmonkeys.de/\
http://www.dasgenie.com/scrap/\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b0 \cf0 \
RendezCon is a Rendezvous browser with 3 intentions:\
1) do Rendezvous browsing right (multihoming, resolving, etc.)\
2) use the Controller Layer\
3) provide this as complete and good sample code for others\
\
Especially point 3 is important. Every line of code in this example should be correct and the right way of doing the thing it does. If you find something fishy, or not good style, please contact me to discuss the matter and improve the code accordingly. If you find potential points where good use of other Controller or Rendezvous technology can be added and shown, please let me know.\
\
Comparision between RendezCon and the "DNS Service Browser" example shipped with the mDNSResponder source code:\
- Lines of Code 390 to 540,\
- "DNS Service Browser" has some display update issues that RendezCon has not\
- "DNS Service Browser" is using Low Level rendezvous API, RendezCon is using NSNetServiceBrowser/NSNetService\
- RendezCon's TableViews can all be sorted\
- RendezCon can browse for many services at once, "DNS Service Browser" always searches just for one type\
\
\pard\tx1440\tx2880\tx4320\tx5760\tx7200\ql\qnatural

\f1\b \cf0 Notes:
\f0\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 - The NSTextFields in the detail area are bound to the NSArrayController's selection property and show the correct data. However if you acitvate the textfields to select something, then "No selection" is printed in grey underneath the activated textfield. Bug?\
- The NSTableView has redraw issues when you saved a table state with columns that are wider than its NSScrollView and you get more entries than rows available\
- If you doubleclick the resolved addressses in the detail view you get a simple <service type>://<address:port>/ URL opened. In case of ssh terminal sends the :22 as bash command. Doh. \
\
- If you implement -set<Key> for a to-many relationship and do manualObserverNotficiation then you have to use two different IndexSets for the willChange and didChange methods, although the documentiation of \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs20 \cf0 - (void)
\f3\b willChange:
\f2\b0 ({\field{\*\fldinst{HYPERLINK "../TypesAndConstants/FoundationTypes.html#//apple_ref/doc/c_ref/NSKeyValueChange"}}{\fldrslt \cf2 \ul \ulc2 NSKeyValueChange}})
\f4\i change
\f2\i0  \
   
\f3\b valuesAtIndexes:
\f2\b0 ({\field{\*\fldinst{HYPERLINK "NSIndexSet.html#//apple_ref/doc/c_ref/NSIndexSet"}}{\fldrslt \cf2 \ul \ulc2 NSIndexSet}} *)
\f4\i indexes
\f2\i0  
\f3\b forKey:
\f2\b0 ({\field{\*\fldinst{HYPERLINK "NSString.html#//apple_ref/doc/c_ref/NSString"}}{\fldrslt \cf2 \ul \ulc2 NSString}} *)
\f4\i key
\f0\i0\fs24   \
says otherwise\
\
\pard\tx1440\tx2880\tx4320\tx5760\tx7200\ql\qnatural

\f1\b \cf0 Change Log: \

\f0\b0 v0.2 - \
- Added ResolveAgain to illustrate how this would be done if needed (after e.g. a lost connection). By binding the ResolveAgain Button's "enabled" binding to the selectedObjects.@count of the FoundServicesController i also eliminated the Exception that was thrown on "Restart All" (now "Restart Active")\
- now I'm using KeyValueObserving for starting and stopping Services, by that I was able to implement activate all / deactivate all by option-clicking on the CheckBoxes easily\
- added a count of Services to the Found Services Box, also by using KeyValueObserving\
- added _xserveraid._tcp. (XServe Raid) to the default services\
- fixed bug where RendezCon would not start up when you add an empty service, turn it on and then restart the app\
- minor nib changes \
\
v0.1 - 24. November 2003\
- Intitial release\
- The code has some open points, please review, I want to maintain this code so it could become a reference sample code on controller and rendezvous usage.\
\
\

\f1\b License for Use:
\f0\b0 \
Copyright \'a9 2003 TheCodingMonkeys. All rights reserved.\
Redistribution and use in source and binary forms, with or without modification, \
are permitted provided that the following conditions are met:\
\
- Redistributions of source code must retain the above copyright notice,\
  this list of conditions and the following disclaimer.\
\
- Redistributions in binary form must reproduce the above copyright notice, \
  this list of conditions and the following disclaimer in the documentation\
  and/or other materials provided with the distribution.\
\
- Neither the name of the TheCodingMonkeys nor the names of its contributors\
  may be used to endorse or promote products derived from this software without \
  specific prior written permission.\
\
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE  POSSIBILITY OF SUCH DAMAGE.
\f1\b \cf3 \
}