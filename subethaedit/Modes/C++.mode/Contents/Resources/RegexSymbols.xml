<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE syntax SYSTEM "symbol.dtd">
<symbols>

    <blocks>
        <beginregex>{</beginregex>
        <endregex>}</endregex>
    </blocks>
    
    <symbol id="C Funtions" font-weight="normal" font-style="normal" image="SymbolF()" indentation="1" ignoreblocks="yes">
        <regex>(?&lt;=[\n\r])(?:[\w0-9_*]+\s+){1,3}[\w0-9_*]+[ \t]*\([\]\[\w0-9_,\s*&amp;&lt;&gt;/]*\)(?=\s*\{)</regex>
        <postprocess>
            <find>\([^\)]*\)</find>
            <replace>()</replace>
        </postprocess>
    </symbol>

    <symbol id="C++ Methods" font-weight="normal" font-style="normal" image="SymbolM" indentation="1" ignoreblocks="yes">
        <regex>(?&lt;=[\n\r])(?:[\w0-9_*]+\s+){0,3}[\w0-9_]+::[\w0-9_]+[ \t]*\([\]\[\w0-9_,\s*&amp;&lt;&gt;/]*\)(?=\s*\{)</regex>
        <postprocess>
            <find>\([^\)]*\)</find>
            <replace>()</replace>
        </postprocess>
    </symbol>

    <symbol id="C++ Classes" font-weight="normal" font-style="normal" image="SymbolC" indentation="1" ignoreblocks="yes">
        <regex>(?&lt;=[\n\r])class[\t ]([\w0-9_]*)(?=\s*\{)</regex>
    </symbol>

    <symbol id="Pragma Marks" font-weight="bold" font-style="normal" image="Symbol#" indentation="0" ignoreblocks="yes">
        <regex>(#pragma mark[	 -]*[^\n]*)\n</regex>
        <postprocess>
            <find>#pragma mark[-	 \n]*</find> <!-- An empty string places a separator -->
            <replace></replace>
        </postprocess>
    </symbol>

    <symbol id="CVS/SVN conflict" font-weight="bold" font-style="normal" image="SymbolWarn" indentation="0" ignoreblocks="no">
        <regex>^&lt;&lt;&lt;&lt;&lt;&lt;&lt;[^=]*======[^&gt;]*&gt;&gt;&gt;&gt;&gt;&gt;&gt;</regex>
        <postprocess>
            <find>.*</find>
            <replace>Versioning conflict!</replace>
        </postprocess>
    </symbol>

</symbols>