################################################################// Used in The Modes so far: actionscript, applescript, asp, base, bash, c, <ENTER HERE>, ruby

comment 					*//JavadocComment 
comment.block 				// Comment
comment.block.documentation
comment.block.documentation.js
comment.block.documentation.tag
comment.block.js
comment.block.jsp
comment.block.php
comment.block.vb
comment.line				// SingleComment
comment.line.double-slash
comment.line.double-slash.js
comment.line.php
comment.line.vb

constant					// Constants
constant.character
constant.language.cocoa
constant.language.types.cocoa
constant.numeric			*// Numbers
constant.numeric.character
constant.numeric.js
constant.numeric.keyword 	*// Constants
constant.numeric.keyword.js
constant.numeric.preprocessor

entity.name.method
entity.name.type.classes.cocoa
entity.name.function.cocoa

keyword						*// Keywords, Predefined Variables
keyword.class				// Classes
keyword.control				*// Control Statements - if else 
keyword.control.asp
keyword.control.js
keyword.control.vb
keyword.directive.objj
keyword.function			// Functions (Commands)
keyword.objective-c
keyword.operator
keyword.type				*// Types - public private int
keyword.type.js
keyword.type.objj

language.function			*// FunctionRegex
language.function.js
language.function.php
language.operator			*// Operators - +, -,
language.preprocessor		// Preprocessor
language.property			*// Properties -> used in coda 2
language.record
language.variable
language.variable.class
language.variable.global
language.variable.global.builtin
language.variable.instance
language.variable.perl
language.variable.php
language.variable.string
language.variable.string.php

markup.comment
markup.declaration
markup.declaration.string.double
markup.declaration.string.single
markup.inline.cdata 			*//
markup.inline.math
markup.processing
markup.processing.attribute.value.string
markup.processing.languageswitch
markup.processing.languageswitch.asp
markup.processing.languageswitch.jsp
markup.processing.languageswitch.php
markup.tag
markup.tag.attribute.name
markup.tag.attribute.value.string

meta.block					// Block
meta.block.attribute
meta.block.begin
meta.block.css
meta.block.curly
meta.block.curly.js
meta.block.directives
meta.block.js
meta.block.percentagestring.unescapedbracketrecursive.angle
meta.block.percentagestring.unescapedbracketrecursive.bracket
meta.block.percentagestring.unescapedbracketrecursive.parentheses
meta.block.square
meta.block.tag.erb
meta.block.tag.erb.no-content
meta.block.tag.php
meta.block.tag.php.no-content
meta.default				*// Base
meta.important				*//
meta.important.memorymanagement
meta.invalid				*//
meta.invalid.sgmlcomment
meta.link
meta.tag.erbstart
meta.tag.preprocessor

string.angle
string.array.percent
string.array.percent.curly
string.double				// Double Quoted String
string.double.js
string.double.nsstring.objj
string.double.php
string.double.openstep
string.double.vb
string.exec.backtick
string.exec.percentx
string.exec.percentx.curly
string.here-doc
string.here-doc.perl
string.here-doc.php
string.percentage.curly
string.regex.js
string.regex.percentage.curly
string.single				// Single Quoted String
string.single.js
string.single.php
string.symbol
string.symbol.percent
string.symbol.percent.curly

style.at-rule
style.comment.block
style.comment.block.documentation
style.property.name
style.value.color.rgb-value
style.value.keyword
style.value.numeric
style.value.string.double
style.value.string.single

structured.emphasis
structured.event
structured.heading
structured.heading.section
structured.reference
structured.separator
structured.tool-tip
structured.variable

support						// Application API and Central API - mostly used for framework classes and constants?
support.accessor
support.class
support.class.standard.js
support.class.standard.obj
support.class.standard.objj
support.constant
support.constant.objj
support.function
support.function.php
support.method
support.method.special.php

################################################################// Used in Coda Style Sheets
-comment
-constant.numeric
-constant.numeric.keyword
-keyword
-keyword.control
-keyword.type
-language.function
-language.operator
-language.property
-language.variable
-language.variable.string
-markup.comment
markup.constant.entity
-markup.declaration
-markup.inline.cdata
-markup.processing
-markup.tag
-markup.tag.attribute.name
-markup.tag.attribute.value
markup.tag.framework
-meta.default
meta.highlight.currentline
-meta.important
-meta.invalid
meta.invisible.characters
meta.link
string
string.regex
string.regex.escaped
-style.at-rule
style.comment
-style.property.name
-style.value.color.rgb-value
-style.value.keyword
-style.value.numeric
style.value.string
-support

################################################################//Helper Regex
.*scope="(.*)".*
^\s.*
^<.*
^\n

################################################################//Questions
scope for nil, true, false, pi -> constant? literal?
LassoScriot <-> CFML -> delete one, which one?
LaTeX scopes are fishy
libraries?
pretty sure indent="" is almost never used?
one step tidy xml
objective j default state block - ?
pragma(s)?
"<!--  This is the "we do a complete HTML mode and import php everywhere" section -->" -> similar comments all over the place - smart thing?

